[gd_scene load_steps=21 format=2]

[ext_resource path="res://Sprites/healer.png" type="Texture" id=1]
[ext_resource path="res://Sprites/healthSprite.png" type="Texture" id=2]
[ext_resource path="res://Fonts/Retro Gaming.ttf" type="DynamicFontData" id=3]
[ext_resource path="res://Shaders/flash_shader.tres" type="Material" id=4]
[ext_resource path="res://Sprites/target.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

var heal_particles = preload(\"res://Objects/heal_particles.tscn\")

const WALK_SPEED = 5

var life = 100
var velocity = Vector2()
var color = Color.darkolivegreen
var current_spell = \"\"

var spell_count = 0

var tuto = [\"I need to hold [SPACE] to start casting\",
\"Then i need to choose a target with [F1]/[F2]/[F3]\",
\"Now, i can type my first spell name : [SUPPORT]\",
\"Once my spell is ready, i only have to release the [SPACE] key\",
\"Once again, [SPACE] to cast\",
\"[F1]/[F2]/[F3] or none, if i want to heal myself\",
\"[SUPPORT]\",
\"Release [SPACE]\"
]

var warrior
var rogue
var mage

func _ready():
	warrior = get_tree().get_nodes_in_group(\"warrior\")[0]
	rogue = get_tree().get_nodes_in_group(\"rogue\")[0]
	mage = get_tree().get_nodes_in_group(\"mage\")[0]

func _process(delta):
	# UI
	$HealthBar.value = life
	$target.rotation_degrees += 30 * delta
	$target/target_bis.rotation_degrees -= 60 * delta
	$target.visible = Input.is_action_pressed(\"ui_accept\")
	$text.text = current_spell
	align_text($text)

	# Target players
	var heal_target = self
	if Input.is_key_pressed(KEY_F1):
		heal_target = rogue
	elif Input.is_key_pressed(KEY_F2):
		heal_target = warrior
	elif Input.is_key_pressed(KEY_F3):
		heal_target = mage
	
	$target.position = heal_target.position - self.position
	
	handle_tutorial_text(heal_target)
	
	if Input.is_action_just_pressed(\"ui_accept\"):
		$AnimatedSprite.play(\"attacking\")
	
	if Input.is_action_just_released(\"ui_accept\"):
		$AnimatedSprite.play(\"idle\")
		if current_spell != \"\":
			cast(current_spell, heal_target)
			current_spell = \"\"

func handle_tutorial_text(heal_target):
	if spell_count > 1:
		$tutorial_text.text = \"\"
		return
	if spell_count == 0:
		if !$target.visible:
			$tutorial_text.text = tuto[0]
		elif heal_target == self:
			$tutorial_text.text = tuto[1]
		elif current_spell != \"SUPPORT\":
			$tutorial_text.text = tuto[2]
		else:
			$tutorial_text.text = tuto[3]
	if spell_count == 1:
		if !$target.visible:
			$tutorial_text.text = tuto[4]
		elif heal_target == self:
			$tutorial_text.text = tuto[5]
		elif current_spell != \"SUPPORT\":
			$tutorial_text.text = tuto[6]
		else:
			$tutorial_text.text = tuto[7]
	align_text($tutorial_text)

func _unhandled_key_input(event):
	if !Input.is_action_pressed(\"ui_accept\"):
		return
	# Add letters to the spell
	var just_pressed = event.is_pressed() and not event.is_echo()
	if event.scancode >= 65 and event.scancode <= 90 and just_pressed:
		current_spell += char(event.unicode).to_upper()
	if event.scancode == KEY_BACKSPACE and just_pressed and !current_spell.empty():
		current_spell.erase(current_spell.length() - 1, 1)

func cast(spell : String, target : Object):
	if spell == \"SUPPORT\":
		target.heal(10)
		spawn_particles(target.position)
		#TODO Sound
	if spell == \"RESURRECT\":
		target.resurrect(10)
		spawn_particles(target.position)
		#TODO sound
	if spell == \"FOUNTAIN\":
		for node in [self, warrior, rogue, mage]:
			node.heal(5)
			spawn_particles(node.position)
		# TODO sound
	
	spell_count += 1

func hit(damage):
	life = max(0, life - damage)
	if life <= 0:
		die()
		return true
	$ShaderAnimationPlayer.play(\"hit\")

func spawn_particles(position : Vector2):
	var new_parts = heal_particles.instance()
	new_parts.position = position
	get_parent().add_child(new_parts)

func heal(damage):
	life = min(life + damage, 100)

func die():
	$AnimatedSprite.animation = \"dead\"
	
func align_text(text_node):
	text_node.rect_size.x = text_node.get_font(\"normal_font\").get_string_size(text_node.text).x
	text_node.rect_position.x = - text_node.rect_size.x / 2
"

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 16, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 32, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 48, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 64, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 80, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 112, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 16, 16 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 1 )
region = Rect2( 96, 0, 16, 16 )

[sub_resource type="SpriteFrames" id=11]
animations = [ {
"frames": [ SubResource( 2 ), SubResource( 3 ) ],
"loop": true,
"name": "idle",
"speed": 3.0
}, {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ) ],
"loop": true,
"name": "running",
"speed": 5.0
}, {
"frames": [ SubResource( 8 ) ],
"loop": true,
"name": "dead",
"speed": 5.0
}, {
"frames": [ SubResource( 9 ), SubResource( 10 ) ],
"loop": true,
"name": "attacking",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 12.2867, 22.0602 )

[sub_resource type="DynamicFont" id=13]
font_data = ExtResource( 3 )

[sub_resource type="Animation" id=14]
resource_name = "action"
length = 1.5
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:position:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 10, -0.25, 0, 0.25, 0, 8, -0.25, 0, 0.25, 0, 10, -0.25, 0, 0.25, 0, 8, -0.25, 0, 0.25, 0, 10, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.4, 0.6, 0.7, 0.8, 0.9, 1.5 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0, 15, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.6, 0.8, 1 )
}

[sub_resource type="Animation" id=15]
resource_name = "hit"
length = 0.6
tracks/0/type = "bezier"
tracks/0/path = NodePath("AnimatedSprite:material:shader_param/flash_modifier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.294587, 1.3148, 1, -0.25, 0, 0.247183, 0.0570122, 0, -0.0580567, -0.971284, 0.290986, 0.591505, 1, -0.251362, 0.0570122, 0.245372, -1.006, -0.00918633, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.1, 0.3, 0.4, 0.61 )
}

[node name="healer" type="KinematicBody2D" groups=[
"healer",
"player",
]]
collision_layer = 2
collision_mask = 5
script = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = ExtResource( 4 )
scale = Vector2( 5, 5 )
frames = SubResource( 11 )
animation = "idle"
playing = true

[node name="target" type="Sprite" parent="."]
modulate = Color( 0.137255, 0.647059, 0.145098, 1 )
scale = Vector2( 4, 4 )
texture = ExtResource( 5 )

[node name="target_bis" type="Sprite" parent="target"]
modulate = Color( 1, 1, 1, 0.584314 )
scale = Vector2( 1.5, 1.5 )
texture = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( -4.5, 6.5 )
shape = SubResource( 12 )

[node name="HealthBar" type="TextureProgress" parent="."]
margin_left = -18.0
margin_top = -46.0
margin_right = -2.0
margin_bottom = -44.0
rect_scale = Vector2( 2, 2 )
value = 100.0
texture_progress = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="text" type="RichTextLabel" parent="."]
modulate = Color( 0.054902, 0.713726, 0.109804, 1 )
margin_left = -58.0
margin_top = -79.0
margin_bottom = -59.0
grow_horizontal = 2
grow_vertical = 0
custom_fonts/normal_font = SubResource( 13 )
meta_underlined = false
text = "test"
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": ""
}

[node name="tutorial_text" type="RichTextLabel" parent="."]
modulate = Color( 0.054902, 0.713726, 0.109804, 1 )
margin_left = -27.2758
margin_top = -110.806
margin_right = 30.7242
margin_bottom = -90.8063
grow_horizontal = 2
grow_vertical = 0
custom_fonts/normal_font = SubResource( 13 )
meta_underlined = false
text = "test"
scroll_active = false
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": ""
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/action = SubResource( 14 )

[node name="ShaderAnimationPlayer" type="AnimationPlayer" parent="."]
anims/hit = SubResource( 15 )
